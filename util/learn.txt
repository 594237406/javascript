1.字符串按空格分隔

“”.match(/\S+/g);
然后调用each

2.取反:
if(~a.indexOf(b))

3.调用each函数

4.缓存中读取配置

cacheOption

5.三元运算符格式
num==null?

//return a ‘clean’ array
this.toArray():

//return just the object
this;

6.实例化

if(!(this intanceOf Class) return new Class();

function Class(){
     return new Class(arguments);
}

7.声明变量格式：

var

     //注释
     a,
     //注释
     b

8.数组操作函数

core_concat = core_deletedIds.concat,
core_push = core_deletedIds.push,
core_slice = core_deletedIds.slice,
core_indexOf = core_deletedIds.indexOf,
core_toString = class2type.toString,
core_hasOwn = class2type.hasOwnProperty,
core_trim = core_version.trim,

9.页面加载事件
document.addEventListener( "DOMContentLoaded", completed, false );
window.addEventListener( "load", completed, false );

10.逆向查找
function b(arr,idx){
return idx==null?
   //返回
   ar
}

11.断言
assert(fn && 'GeneratorFunction' == fn.constructor.name, 'app.use() requires a generator function')